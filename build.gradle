plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'pmd'
    id 'org.jetbrains.kotlinx.kover' version '0.7.3'
}

group = 'br.com.fiap.grupo30.fastfood'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

spotless {
    format 'misc', {
        target '*.gradle', '.gitattributes', '.gitignore'

        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    java {
        googleJavaFormat('1.22.0').aosp().reflowLongStrings().skipJavadocFormatting()
        formatAnnotations()
        target 'src/main/**/*.java', 'src/test/**/*.java'
    }
}

pmd {
    toolVersion = '7.1.0'
    ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
    consoleOutput = true
    sourceSets = [sourceSets.main, sourceSets.test]
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core:3.26.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

kover {
    // Gera os relatórios de cobertura em XML e HTML
    xmlReport {
        onCheck = true // Valida cobertura automaticamente no 'check'
    }
    verify {
        rule {
            name = "Minimum code coverage"
            bound {
                minValue = 50.0 // Define o mínimo de cobertura exigido
            }
        }
    }
    filters {
        classes {
            includes += ["br.com.fiap.grupo30.fastfood.*"] // Incluir os pacotes corretos
        }
    }
}

sourceSets {
    test {
        resources {
            srcDirs = ["src/test/java/br/com/fiap/grupo30/products_api"]
        }
    }
}


tasks.check.dependsOn("koverXmlReport", "koverHtmlReport") // Garante que os relatórios sejam gerados no check
